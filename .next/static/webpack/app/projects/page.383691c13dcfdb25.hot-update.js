"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/projects/page",{

/***/ "(app-pages-browser)/./src/data/projects.ts":
/*!******************************!*\
  !*** ./src/data/projects.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   projects: () => (/* binding */ projects)\n/* harmony export */ });\nconst projects = [\n    {\n        title: \"Pulse – AI Healthcare Assistant App\",\n        slug: \"pulse\",\n        period: \"April 2025 – Present\",\n        description: \"An AI-powered mobile platform powering users to interact with a virtual doctor for symptom triage, diagnostics, medical report analysis and storage, and ordering medicines from nearby pharmacies via integrated APIs.\",\n        longDescription: [\n            \"Developed an AI-powered mobile platform enabling users to interact with a virtual doctor for comprehensive healthcare assistance.\",\n            \"Implemented symptom triage and diagnostic capabilities using advanced AI algorithms for accurate health assessments.\",\n            \"Integrated medical report analysis and secure storage functionality for patient data management.\",\n            \"Built medicine ordering system with nearby pharmacy integration through robust API connections.\",\n            \"Designed intuitive mobile interface ensuring seamless user experience across all healthcare interactions.\"\n        ],\n        features: [\n            \"AI-powered virtual doctor consultations\",\n            \"Symptom triage and diagnostic tools\",\n            \"Medical report analysis and storage\",\n            \"Integrated pharmacy API for medicine ordering\",\n            \"Secure patient data management\"\n        ],\n        technologies: [\n            \"React Native\",\n            \"AI/ML\",\n            \"Healthcare APIs\",\n            \"MongoDB\",\n            \"Node.js\",\n            \"Express\",\n            \"OpenAI\"\n        ],\n        thumbnail: \"/thumbnails/pulse.png\",\n        links: {\n            visit: \"\",\n            source: \"\"\n        }\n    },\n    {\n        title: \"Thunder Wallet – Unified Digital Payments App\",\n        slug: \"thunder-wallet\",\n        period: \"October 2021 – January 2022\",\n        description: \"A gas-less, non-custodial wallet with email-based accounts via Privy, unifying UPI, bank, and stablecoin payments, allowing global bill pay, dApp usage (Aave, Uniswap), and DeFi income—via a single mobile interface. (Best UI/UX Award)\",\n        longDescription: [\n            \"Developed a revolutionary gas-less, non-custodial digital wallet with email-based account creation via Privy integration.\",\n            \"Unified multiple payment methods including UPI, traditional banking, and stablecoin transactions in one seamless interface.\",\n            \"Enabled global bill payment capabilities and integrated popular dApp functionalities like Aave and Uniswap.\",\n            \"Implemented DeFi income generation features allowing users to earn through decentralized finance protocols.\",\n            \"Awarded Best UI/UX for exceptional user interface design and seamless user experience.\",\n            \"Built cross-platform mobile application ensuring accessibility across different devices and operating systems.\"\n        ],\n        features: [\n            \"Gas-less transactions\",\n            \"Email-based account creation\",\n            \"Multi-payment method integration\",\n            \"Global bill payment system\",\n            \"dApp integration (Aave, Uniswap)\",\n            \"DeFi income generation\",\n            \"Award-winning UI/UX design\"\n        ],\n        technologies: [\n            \"React Native\",\n            \"Privy\",\n            \"Web3\",\n            \"DeFi Protocols\",\n            \"Stablecoin APIs\",\n            \"UPI Integration\",\n            \"Blockchain\"\n        ],\n        thumbnail: \"/thumbnails/thunder-wallet.png\",\n        links: {\n            visit: \"\",\n            source: \"\"\n        }\n    },\n    {\n        title: \"Intelliguide – AI-Powered Codeforces Profile Analyzer\",\n        slug: \"intelliguide\",\n        period: \"January 2025 - Present\",\n        description: \"A Smart AI powered Codeforces profile analyzer.\",\n        longDescription: [\n            \"Over 600 usages and 400+ new users in 48 hours.\",\n            \"Integrated Codeforces and OpenAI APIs to generate personalized skill enhancement strategies and automated performance insights, streamlining manual analysis tasks by 90%.\",\n            \"Developed full-stack platform with Next.js, MongoDB, and Tailwind CSS, delivering cross-device responsive design and seamless user experience for competitive programmers worldwide.\",\n            \"Empowered competitive programmers by identifying weaknesses and enhancing problem-solving skills.\"\n        ],\n        features: [\n            \"Automated performance analysis\",\n            \"Personalized skill enhancement strategies\",\n            \"Real-time Codeforces data integration\",\n            \"Cross-device responsive design\",\n            \"AI-powered insights generation\"\n        ],\n        technologies: [\n            \"Next.js\",\n            \"TypeScript\",\n            \"Tailwind CSS\",\n            \"Node.js\",\n            \"Express\",\n            \"MongoDB\",\n            \"Codeforces API\",\n            \"OpenAI\"\n        ],\n        thumbnail: \"/thumbnails/Intelliguide.png\",\n        links: {\n            visit: \"https://intelliguide.vercel.app/\",\n            source: \"https://github.com/punyajain1/Intelliguide\"\n        }\n    },\n    {\n        title: \"AI Mail Agent\",\n        slug: \"ai-mail-agent\",\n        period: \"June 2025 - Present\",\n        description: \"An AI Agent that reads important mails and writes the suitable replies while saving summary of mails in a csv file.\",\n        longDescription: [\n            \"Developed an intelligent email assistant using Node.js and TypeScript to automate email management.\",\n            \"Integrated with Gmail API to securely access and scan incoming messages.\",\n            \"Utilized OpenAI's language models to generate context-aware reply drafts for important emails.\",\n            \"Implemented logic to identify relevant emails based on context and sender.\",\n            \"Streamlined email workflow, reducing time spent on repetitive responses and ensuring timely communication.\"\n        ],\n        features: [\n            \"Automated email reading and analysis\",\n            \"AI-powered reply generation\",\n            \"Email summary extraction to CSV\",\n            \"Context-aware email filtering\",\n            \"Gmail API integration\"\n        ],\n        technologies: [\n            \"Node.js\",\n            \"TypeScript\",\n            \"OpenAI\",\n            \"Gmail API\",\n            \"LangChain\"\n        ],\n        thumbnail: \"/thumbnails/AI_GMAIL_AGENT.png\",\n        links: {\n            visit: \"https://www.youtube.com/watch?v=0GxjRceqKSc\",\n            source: \"https://github.com/punyajain1/AI_Gmail_Agent\"\n        }\n    },\n    {\n        title: \"AI RAG Agent\",\n        slug: \"ai-rag-agent\",\n        period: \"May 2025 - Present\",\n        description: \"A research assistant tool that leverages AI to help users to ask any question and get answer to it from any of users uploaded documents.\",\n        longDescription: [\n            \"Developed a Retrieval-Augmented Generation (RAG) AI agent using LangChain to enable efficient querying of legal documents and research papers.\",\n            \"Implemented parsing and chunking of PDF and TXT files to optimize document retrieval processes.\",\n            \"Utilized in-memory storage solutions to ensure fast access to document chunks during query processing.\",\n            \"Implemented query handling and answer generation to deliver accurate, contextually relevant responses based solely on uploaded document content.\"\n        ],\n        features: [\n            \"Document upload and parsing (PDF, TXT)\",\n            \"Intelligent document chunking\",\n            \"RAG-based query answering\",\n            \"In-memory storage optimization\",\n            \"Context-aware response generation\"\n        ],\n        technologies: [\n            \"Python\",\n            \"LangChain\",\n            \"PyPDF2\",\n            \"OpenAI\"\n        ],\n        thumbnail: \"/thumbnails/AI_RAG_AGENT.png\",\n        links: {\n            visit: \"https://gpt-neural-visualizer.vercel.app/\",\n            source: \"https://github.com/punyajain/GraphGPT\"\n        }\n    },\n    {\n        title: \"Brainly\",\n        slug: \"brainly\",\n        period: \"December 2024\",\n        description: \"A Full Stack web application helps user to save any important link or content at one place for easy access.\",\n        longDescription: [\n            \"Brainly is a fully-fledged web application that helps users save and revisit their favorite content across platforms.\",\n            \"This application allows users to save YouTube videos, Twitter links, and expands to include Spotify and LinkedIn\",\n            \"posts so that they can easily view them later.\",\n            \"It has a secure login and signup system for user authentication and data privacy.\",\n            \"I used Zod for input validation and bcrypt for password hashing on the server-side.\"\n        ],\n        features: [],\n        technologies: [\n            \"MongoDB\",\n            \"Express.js\",\n            \"React.js\",\n            \"Node.js\",\n            \"Zod\",\n            \"Jsonwebtoken\",\n            \"Mongoose\",\n            \"Bcrypt\"\n        ],\n        thumbnail: \"/thumbnails/Brainly.png\",\n        links: {\n            visit: \"https://www.youtube.com/watch?v=CCVkD4rmuv8\",\n            source: \"https://github.com/punyajain1/brainly-frontend\"\n        }\n    },\n    {\n        title: \"Chess\",\n        slug: \"chess\",\n        period: \"December 2024\",\n        description: \"Full Stack Chess Game\",\n        longDescription: [\n            \"Real-Time Multiplayer: Supports live chess matches with real-time communication using WebSockets.\",\n            \"Game Logic with Chess.js: Utilizes Chess.js for robust move validation and chessboard state management.\",\n            \"Modern Frontend with React: Built with React for a responsive and interactive user interface.\",\n            \"Type-Safe Backend: Developed in Node.js with TypeScript, ensuring scalability and maintainability.\",\n            \"Seamless Synchronization: Moves are instantly reflected on both players' boards for a smooth gaming experience.\"\n        ],\n        features: [],\n        technologies: [\n            \"WebSockets\",\n            \"Node.js\",\n            \"Typescript\",\n            \"React.js\",\n            \"Chess.js\"\n        ],\n        thumbnail: \"/thumbnails/chess.png\",\n        links: {\n            visit: \"https://youtu.be/q7MOLYCAPR0\",\n            source: \"\"\n        }\n    },\n    {\n        title: \"ChatSphere\",\n        slug: \"chat-sphere\",\n        period: \"November 2024\",\n        description: \"\",\n        longDescription: [\n            \"Enables smooth communication with instant message delivery and a user-friendly interface, making it interactive.\",\n            \"The backend efficiently manages connections and message routing.\",\n            \"Frontend powered by React ensures smooth, dynamic user interactions.\",\n            \"It is an ongoing project with plans for implementing end-to-end encryption and a secure login system for complete privacy and functionality.\",\n            \"A simple chat application with a tremendous scope for development and evolution.\"\n        ],\n        features: [],\n        technologies: [\n            \"WebSockets\",\n            \"Express\",\n            \"Node.js\",\n            \"React\"\n        ],\n        thumbnail: \"/thumbnails/chatsphere.png\",\n        links: {\n            visit: \"https://youtu.be/MFDYUBucMAM\",\n            source: \"\"\n        }\n    },\n    {\n        title: \"Bolt Clone\",\n        slug: \"bolt-clone\",\n        period: \"February 2024\",\n        description: \"An AI-powered website builder that generates fully functional websites based on user prompts.\",\n        longDescription: [\n            \"An AI-powered website builder that generates fully functional websites based on user prompts.\",\n            \"Utilizes OpenAI’s API and custom prompting techniques to create tailored website designs and content.\",\n            \"React and TypeScript ensure a dynamic, interactive frontend, while Express and Node.js handle backend processing.\",\n            \"Designed for scalability, allowing users to generate anything from landing pages to full-fledged applications.\"\n        ],\n        features: [],\n        technologies: [\n            \"React\",\n            \"TypeScript\",\n            \"Express\",\n            \"Node.js\",\n            \"OpenAI\"\n        ],\n        thumbnail: \"\",\n        links: {\n            visit: \"\",\n            source: \"\"\n        }\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/data/projects.ts\n"));

/***/ })

});